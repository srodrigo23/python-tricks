image hub

Opens a zmq socket and receives images

Opens a zmq (REP or SUB) socket on the hub computer, for example,
a Mac, that will be receiving and displaying or processing OpenCV images
and related text messages. Provides methods to receive images or receive
jpg compressed images.

Two kinds of ZMQ message patterns are possible in imagezmq:
REQ/REP: an image is sent and the sender waits for a reply ("blocking").
PUB/SUB: an images is sent and no reply is sent or expected ("non-blocking").

There are advantabes and disadvantages for each message pattern.
See the documentation for a full description of REQ/REP and PUB/SUB.
The default is REQ/REP for the ImageSender class and the ImageHub class.

Arguments:
    open_port: (optional) the socket to open for receiving REQ requests or 
        socket to connect to for SUB requests.
    REQ_REP: (optional) if True (the default), a REP socket will be created
        if False, a SUB socket will be created
"""


DOCUMENTATION IMAGE HUB

"""
    Initializes zmq socket to receive images and text.
    Expects an appropriate ZMQ socket at the senders tcp:port address:
    If REQ_REP is True (the default), then a REP socket is created. It
    must connect to a matching REQ socket on the ImageSender().
    If REQ_REP = False, then a SUB socket is created. It must connect to
    a matching PUB socket on the ImageSender().
"""


    """
        In PUB/SUB mode, the hub can connect to multiple senders at the same
        time.
        Use this method to connect (and subscribe) to additional senders.
        Arguments:
             open_port: the PUB socket to connect to.
    """

    """
        Receives OpenCV image and text msg.
        Arguments:
          copy: (optional) zmq copy flag.
        Returns:
          msg: text msg, often the image name.
          image: OpenCV image.
    """

"""
        Receives text msg, jpg buffer.
        Arguments:
            copy: (optional) zmq copy flag
        Returns:
            msg: text message, often image name
            jpg_buffer: bytestring jpg compressed image
    """
"""
    Sends the zmq REP reply message.
    Arguments:
        reply_message: reply message text, often just string 'OK'
    """





image sender
documentation:

""" This is a placeholder. This method will be set to either a REQ/REP
		or PUB/SUB sending method, depending on REQ_REP option value.
		Arguments:
			msg: text message or image name.
			image: OpenCV image to send to hub.
		Returns:
			A text reply from hub in REQ/REP mode or nothing in PUB/SUB mode.
		"""

"""
    Sends OpenCV image and msg to hub computer in REQ/REP mode
    Arguments:
        msg: text message or image name.
        image: OpenCV image to send to hub.
    Returns:
        A text reply from hub.
"""

"""
    Sends OpenCV image and msg hub computer in PUB/SUB mode. If
    there is no hub computer subscribed to this socket, then image and msg
    are discarded.
    Arguments:
        msg: text message or image name.
        image: OpenCV image to send to hub.
    Returns:
        Nothing; there is no reply from hub computer in PUB/SUB mode
"""

"""
    This is a placeholder. This method will be set to either a REQ/REP
    or PUB/SUB sending method, depending on REQ_REP option value.
    Arguments:
    msg: image name or message text.
    jpg_buffer: bytestring containing the jpg image to send to hub.
    Returns:
    A text reply from hub in REQ/REP mode or nothing in PUB/SUB mode.
"""

"""Sends msg text and jpg buffer to hub computer in REQ/REP mode.
		Arguments:
			msg: image name or message text.
			jpg_buffer: bytestring containing the jpg image to send to hub.
		Returns:
			A text reply from hub.
		"""
"""Sends msg text and jpg buffer to hub computer in PUB/SUB mode. If
		there is no hub computer subscribed to this socket, then image and msg
		are discarded.
		Arguments:
			msg: image name or message text.
			jpg_buffer: bytestring containing the jpg image to send to hub.
		Returns:
			Nothing; there is no reply from the hub computer in PUB/SUB mode.
		"""


Abrir un socket para enviar imagenes
Se crea una nistancia de ZMQ con el protocolo (REQ or PUB) para enviar imagenes desde
el dispositivo de captura de im√°genes que en este caso es la raspberry pi
el cual enviara imagenes y texto relativo a una computadora central.
Provee metodos para enviar imagenes o enviar jpg imagenes compresas en formato jpg.

Dos tipos de patrones de mensajes ZMQ son posibles:
REQ/REP: una imagen es enviada y el remitente se queda a la espera de recibir un mensaje de conformacion("proceso bloqueado")
PUB/SUB: una imagen es enviada y no se espera respuesta alguna("proceso no bloqeuado")

hay ventajas y desventajas para cada patron de mensaje.
el protocolo adoptado es el REQ/PED

Argumentos:
    conectar a : direccion tcp: puerto del servidor
    REQ/REP : opcional si es verdad(por defecto)
                se creara un socket con el protocolo REQ, 
                si es falso, se creara PUB socket

Serializacion del socket
"""
Numpy array serialization methods.

Modelled on PyZMQ serialization examples.
Used for sending / receiving OpenCV images, which are Numpy arrays.
Also used for sending / receiving jpg compressed OpenCV images.
"""

"""
    Sends a numpy array with metadata and text message.
    Sends a numpy array with the metadata necessary for reconstructing
    the array (dtype,shape). Also sends a text msg, often the array or
    image name.

    Arguments:
        A: numpy array or OpenCV image.
        msg: (optional) array name, image name or text message.
        flags: (optional) zmq flags.
        copy: (optional) zmq copy flag.
        track: (optional) zmq track flag.
    """



"""
    Send a jpg buffer with a text message.

    Sends a jpg bytestring of an OpenCV image.
    Also sends text msg, often the image name.
    Arguments:
        msg: image name or text message.
        jpg_buffer: jpg buffer of compressed image to be sent.
        flags: (optional) zmq flags.
        copy: (optional) zmq copy flag.
        track: (optional) zmq track flag.
    """
"""
    Receives a numpy array with metadata and text message.

    Receives a numpy array with the metadata necessary
    for reconstructing the array (dtype,shape).
    Returns the array and a text msg, often the array or image name.

    Arguments:
        flags: (optional) zmq flags.
        copy: (optional) zmq copy flag.
        track: (optional) zmq track flag.

    Returns:
        msg: image name or text message.
        A: numpy array or OpenCV image reconstructed with dtype and shape.
    """
"""
    Receives a jpg buffer and a text msg.
    Receives a jpg bytestring of an OpenCV image.
    Also receives a text msg, often the image name.

    Arguments:
        flags: (optional) zmq flags.
        copy: (optional) zmq copy flag.
        track: (optional) zmq track flag.

    Returns:
        msg: image name or text message.
        jpg_buffer: bytestring, containing jpg image.
    """






""" 
IMAGE NODE
Contains all the attributes and methods of this imagenode

One ImageNode is instantiated during the startup of the imagenode.py
program. It takes the settings loaded from the YAML file and sets all
the operational parameters of the imagenode, including the hub address that
images and messages will be sent to, camera settings, sensors, etc. as
attributes of the ImageNode.

The ImageNode also contains all the methods to gather, process and send
images, event detection messages and sensor data to the ImageHub.

Parameters:
    settings (Settings object): settings object created from YAML file
"""